Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Tags:
      app: aws-bedrock-telegram-genai-chatbot
    Runtime: python3.13
    Architectures:
      - arm64
    LoggingConfig:
      LogGroup: !Sub /aws/lambda/${AWS::StackName}
      LogFormat: JSON
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension-Arm64:20 #Lambda Insights Layer - Specific for us-east-1 https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-extension-versionsARM.html
      - !Sub arn:aws:lambda:${AWS::Region}:615299751070:layer:AWSOpenTelemetryDistroPython:5 #Application Signals Layer - Specific for us-east-1 https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Application-Signals-Enable-Lambda.html
    Tracing: Active
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-instrument

Resources:
  TelegramFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: TelegramFunction
      CodeUri: src/Function
      Handler: bot.lambda_handler
      MemorySize: 256
      Timeout: 30
      AutoPublishAlias: SnapStart
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - arn:aws:ssm:*:*:parameter/bedrock-telegram-genai-chatbot/*
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: '*'
        - DynamoDBCrudPolicy:
            TableName: !Ref ChatHistory
      Events:
        ApiPOST:
          Type: Api
          Properties:
            Path: /
            Method: POST
      Environment:
        Variables:
          CHATHISTORY_TABLE_NAME: !Ref ChatHistory
          CHATHISTORY_TABLE_ARN: !GetAtt ChatHistory.Arn

  TelegramFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain

  ChatHistory:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: chat_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
        - AttributeName: record_type
          AttributeType: S
      KeySchema:
        - AttributeName: chat_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: DebugSettingsIndex
        KeySchema:
          - AttributeName: chat_id
            KeyType: HASH
          - AttributeName: record_type
            KeyType: RANGE
        Projection:
          ProjectionType: INCLUDE
          NonKeyAttributes:
            - debug_enabled
            - expireat
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: expireat
        Enabled: true
      Tags:
        - Value: aws-bedrock-telegram-genai-chatbot
          Key: app